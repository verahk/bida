par <- list(local_struct = c("ptree", "none"),
init = c("pcskel"),
sample = "order",
ess = 1,
edgepf = c("2", "logN"),
hardlimit = 4,
N = c(300, 1000, 3000),
r = 15:30)
# add params controlling random-cpt generation
par$n <- c(20)
par$k <- c(4)
par$maxdepth <- c(0, .5, 1)
source("~/Documents/git/test/bida/inst/simulations/run.R", echo=TRUE)
source("~/Documents/git/test/bida/inst/simulations/run.R", echo=TRUE)
# test ----
par <- pargrid[args$test_row, ]
par
sim_load_bn(par)
profvis::profvis(sim_load_bn(par))
rand_dag(20, 8)
bida:::rand_dag(20, 8)
bida:::rand_dist(rand_dag(20, 8), "cat")
bida:::rand_dist(bida:::rand_dag(20, 8), "cat")
bida:::rand_dist(bida:::rand_dag(20, 8), "cat", nlev = rep(4, 20))
k <- 4
dag <- bida:::rand_dag(n, d)
n <- 20
d <- 8
k <- 4
dag <- bida:::rand_dag(n, d)
nlev <- rep(k, n)
profvis::profvis(rand_cpt(nlev, alpha = ""))
profvis::profvis(rand_cpt(nlev, alpha = "", local_structure = "tree", prob = 1, maxdepth = .5))
rand_cpt(nlev, alpha = "", local_structure = "tree", prob = 1, maxdepth = .5))
rand_cpt(nlev, alpha = "", local_structure = "tree", prob = 1, maxdepth = .5)
profvis::profvis(bida:::rand_cpt(nlev, alpha = "", local_structure = "tree", prob = 1, maxdepth = .5))
profvis::profvis(bida:::rand_dist(nlev, alpha = "", local_structure = "tree", prob = 1, maxdepth = .5))
profvis::profvis(bida:::rand_dist(dag, alpha = 1, local_structure = "tree", prob = 1, maxdepth = .5))
bida:::rand_dist(dag, alpha = 1, local_structure = "tree", prob = 1, maxdepth = .5)
bida:::rand_dist(dag, type = "cat", nlev = nlev,alpha = 1, local_structure = "tree", prob = 1, maxdepth = .5)
bida:::rand_dist(dag, type = "cat", nlev = nlev,alpha = 1, local_structure = "tree", prob = 1, maxdepth = .5)
bida:::rand_dist(dag, type = "cat", nlev = nlev,alpha = 1, local_structure = "tree", prob = 1, maxdepth = .5)
profvis::profvis(bida:::rand_bn(n, d, type = "cat", nlev = nlev,alpha = 1, local_structure = "tree", prob = 1, maxdepth = .5))
?bnlearn::custom.fit
bnlearn::custom.fit
usethis::use_build_ignore(c("inst/simulations"))
load_all()
library(devtools)
load_all()
closeAllConnections()
remove.packages("bida")
library(devtools)
document()
