% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bida_bdeu.R
\name{bida_bdeu}
\alias{bida_bdeu}
\alias{new_bida_bdeu}
\title{Class: \code{bida_bdeu}}
\usage{
new_bida_bdeu(counts, ess, partition)
}
\arguments{
\item{partition}{}
}
\description{
Parameters of a Dirichlet distribution over a conditional probability table (CPT),
assuming a BDeu-prior.
}
\examples{

nlev <- 2:4
lev  <- lapply(nlev-1, seq.int, from = 0)
data <- expand_grid_fast(lev)

j <- 1
parentnodes <- 2:length(nlev)
bdeu <- bida_bdeu(data, j, parentnodes, ess = 1, nlev)

# optimize partition of parent space
opt <- optimize_bdeu(bdeu, method = "tree", regular = T)
opt$partition
bdeu_part <- replace(bdeu, "partition", list(opt$partition))

# compute score
score_bdeu(bdeu)
score_bdeu(bdeu_part)

# update hyperparams
update_bdeu(bdeu)
update_bdeu(bdeu_part)

# permute parent dimension
perm <- c(1, 3, 2)
bdeu_perm <- aperm(bdeu_part, perm)
stopifnot(all.equal(as.array(bdeu_perm$counts), array(1, nlev[perm])))
bdeu_perm

# posterior mean
mean_bdeu(bdeu)
mean_bdeu(bdeu_part, reduced = T)  # means of reduced CPT
mean_bdeu(bdeu_part, reduced = F)  # means of full CPT

# posterior sample
dim(sample_bdeu(1000, bdeu_part))
dim(sample_bdeu(1000, bdeu_part, reduced = F))



}
