% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_regular.R
\name{is_regular}
\alias{is_regular}
\alias{is_regular_varwise}
\title{Check if partition is regular.}
\usage{
is_regular(P, nlev, stride = NULL)

is_regular_varwise(P, nlev, stride, i = 1)
}
\arguments{
\item{P}{(list of integer vectors) a partitioning of a zero-indexed outcome space
`0, 1, ..., prod(nlev)-1, see examples.}

\item{nlev}{(integer vector) cardinality of the variables}

\item{stride}{(integer vector) stride corresponding to \code{nlev}. Optional.}

\item{i}{position of node}
}
\value{
a logical constant; \code{TRUE} if partition is regular, \code{FALSE} otherwise.
}
\description{
A partition is called regular if it does not encode any conditional independencies.
The tests if there is any variable for which all parts in the partition is
independent of that variable's value.
More precisely, it iterates through the variables and parts and checks if all
values of the variable is repeated for every configuration of the remainder
variables in that part.
}
\details{
\itemize{
\item \code{is_regular_varwise}: returns \code{TRUE} if \code{P} is regular with respect to variable \code{i}
}
}
\examples{

# specify cardinality of variables
nlev   <- c(2, 2)

## regular
P <- list(0, 1:3)
stopifnot(is_regular(P, nlev) == TRUE)

P <- list(c(0, 3), c(1, 2))
stopifnot(is_regular(P, nlev) == TRUE)

## not regular
P <- list(0:3)
stopifnot(is_regular(P, nlev) == FALSE)

P <- list(0:1, 2:3)
stopifnot(is_regular(P, nlev) == FALSE)
}
\seealso{
\code{\link[=make_regular]{make_regular()}}
}
