% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimize_partition_ldag.R,
%   R/optimize_partition_tree.R
\name{optimize_partition_ldag}
\alias{optimize_partition_ldag}
\alias{optimize_partition_tree}
\title{Optimize a local LDAG structure for a frequency table}
\usage{
optimize_partition_ldag(
  counts,
  levels,
  ess,
  regular,
  min_score_improv = 0,
  P = as.list(1:nrow(counts) - 1),
  labels = rep(list(integer()), length(levels)),
  conf = as.matrix(expand.grid(levels)),
  verbose = FALSE
)

optimize_partition_tree(
  counts,
  levels,
  ess = 1,
  min_score_improv = 0,
  prune = FALSE,
  verbose = verbose
)
}
\description{
Optimize a regression-tree partitioning of the conditional outcome space.
}
\examples{

levels <- list(0:1, 0:1)
counts <- cbind(10, c(10, 100, 1000, 1000))
ess <- 1
optimize_partition_tree(counts, levels, ess, min_score_improv = 0, verbose = TRUE)


# illustrate grow-full-and-then-prune procedure
levels <- list(0:1, 0:1, 0:1)
counts <- cbind(c(1, 1, 1, 1, 10, 20, 20, 2), c(1, 1, 1, 1, 10, 2, 2, 10))

## stop splitting when additional split do not improve score (default)
fit <- optimize_partition_tree(counts, levels, ess, min_score_improv = 0, verbose = TRUE)
cbind(counts, part = get_parts(fit$partition))
sum(fit$scores)

##  grow full tree
fit <- optimize_partition_tree(counts, levels, ess, min_score_improv = -Inf, verbose = TRUE)
cbind(counts, part = get_parts(fit$partition))
sum(fit$scores)

## grow full tree, then prune
fit <- optimize_partition_tree(counts, levels, ess, min_score_improv = -Inf, TRUE, verbose = TRUE)
cbind(counts, part = get_parts(fit$partition))
sum(fit$scores)

# sparse counts - split on var 2
levels <- list(0:2, 0:2)
counts <- cbind(c(rep(1, 3), rep(0, 6)),
                c(rep(0, 6), rep(1, 3)),
                rep(0, 9))
fit <- optimize_partition_tree(counts, levels, ess, min_score_improv = 0, verbose = TRUE)
cbind(counts, part = get_parts(fit$partition))
sum(fit$scores)


}
