% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_data_from_cpts.R
\name{sample_data_from_cpts}
\alias{sample_data_from_cpts}
\title{Sample categorical data}
\usage{
sample_data_from_cpts(n, cpts, top_order = NULL)
}
\arguments{
\item{n}{(integer) sample size}

\item{cpts}{(list of arrays) a list of array-CPTs, stored in the same format as
in \link[bnlearn:bn.fit.class]{bnlearn::bn.fit.dnode}, i.e. with each column corresponding to a parent config
and with named dimensions}

\item{top_order}{}
}
\value{
a matrix with integers representing samples of categorical data
}
\description{
Sample categorical data
}
\details{
Note that the index of the categorical variables are 0-based in \code{\link[=sample_data_from_cpts]{sample_data_from_cpts()}}
and 1-based in \code{\link[=sample_data_from_cpts]{sample_data_from_cpts()}}.
}
\examples{

dag  <- matrix(0, 3, 3, dimnames = list(c("Z", "X", "Y"), c("Z", "X", "Y")))
dag[upper.tri(dag)] <- 1
cpts <- rand_dist(dag, "cat", nlev = rep(3, ncol(dag)))

data <- sample_data_from_cpts(10**4, cpts)


pz <- cpts[["Z"]]
pz
tabulate(data[, 1] +1, nlev[1])/nrow(data)

pxz <- sweep(cpts[["X"]], "Z", pz, "*")
rowSums(pxz)
tabulate(data[, 2] +1, nlev[2])/nrow(data)

pyxz <- sweep(cpts[["Y"]], c("X", "Z"), pxz, "*")
rowSums(pyxz)
tabulate(data[, 3] +1, nlev[3])/nrow(data)

}
